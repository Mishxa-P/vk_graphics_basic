#version 430

layout(local_size_x = 1000) in;

layout(push_constant) uniform params {
  uint len;
} PushConstant;

layout(std430, binding = 0) buffer a 
{
    float A[];
};

layout(std430, binding = 1) buffer b
{
    float B[];
};

layout(std430, binding = 2) buffer Res
{
    float res[];
};

float findAverage(float v1, float v2, float v3, float v4, float v5, float v6, float v7)
{
	return (v1+v2+v3+v4+v5+v6+v7)/7;
}

void main() 
{
	int idx = int(gl_GlobalInvocationID.x);
	float arg1, arg2, arg3, arg4, arg5, arg6, arg7 = 0.0f;
	idx - 3 < 0 ? arg1 = 0.0f : arg1 = A[idx-3];
	idx - 2 < 0 ? arg2 = 0.0f : arg2 = A[idx-2];
	idx - 1 < 0 ? arg3 = 0.0f : arg3 = A[idx-1];
	arg4 = A[idx];
	idx + 1 >= PushConstant.len ? arg5 = 0.0f : arg5 = A[idx+1];
	idx + 2 >= PushConstant.len ? arg6 = 0.0f : arg6 = A[idx+2];
	idx + 3 >= PushConstant.len ? arg7 = 0.0f : arg7 = A[idx+3];	
	
    B[idx] = findAverage(arg1, arg2, arg3, arg4, arg5, arg6, arg7);

	res[idx] = A[idx] - B[idx]; 
}
